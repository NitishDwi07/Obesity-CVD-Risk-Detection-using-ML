/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dentalclinic;

import connection.DatabaseConnection;
import java.awt.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author user
 */
public class Invoice extends javax.swing.JFrame {

    Connection conn;
    String col, sql, search;
    int row;
    PreparedStatement stmt;
    ResultSet result;
    TableRowSorter<DefaultTableModel> tableRow;

    /**
     * Creates new form Invoice
     */
    public Invoice() {
        initComponents();
        showTableData();
        updateTableData();
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) invoiceTable.getDefaultRenderer(Object.class);
        renderer.setHorizontalAlignment(JLabel.CENTER);
        invoiceTable.getTableHeader().setFont(new Font("Segoe UI", Font.PLAIN, 15));
        invoiceTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        invoiceTable.getColumnModel().getColumn(1).setPreferredWidth(230);
    }

    public void showTableData() {
        try {
            conn = DatabaseConnection.getConnection();
            sql = "SELECT id AS 'ID', invoice AS 'Invoice' FROM invoicedetails";
            stmt = conn.prepareStatement(sql);
            result = stmt.executeQuery();
            invoiceTable.setModel(DbUtils.resultSetToTableModel(result));

            sql = "SELECT invoice AS 'Invoice Description', insurancedetails.company_name AS 'Company Name', insurancedetails.company_contact AS 'Contact', insurancedetails.insurance_type AS 'Insurance Type', insurancedetails.total_amount AS 'Total Amount', insurancedetails.amount_paid AS 'Amount Paid', insurancedetails.balance AS 'Balance' FROM invoicedetails JOIN insurancedetails ON invoicedetails.id = insurancedetails.id";
            stmt = conn.prepareStatement(sql);
            result = stmt.executeQuery();
            printTable.setModel(DbUtils.resultSetToTableModel(result));

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } finally {
            try {
                result.close();
                stmt.close();
            } catch (SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }

        updateTableData();

    }

    public void updateTableData() {
        try {
            sql = "SELECT id AS 'ID', invoice AS 'Invoice' FROM invoicedetails";
            stmt = conn.prepareStatement(sql);
            result = stmt.executeQuery();
            invoiceTable.setModel(DbUtils.resultSetToTableModel(result));
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } finally {
            try {
                result.close();
                stmt.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        InvoiceSearchBar = new javax.swing.JTextField();
        InvoiceLbl = new javax.swing.JLabel();
        invoiceScrollPane = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        signoutBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        minimizeLbl = new javax.swing.JLabel();
        exitLbl = new javax.swing.JLabel();
        InvoiceTxt = new javax.swing.JTextField();
        idTxt = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        LabelNo = new javax.swing.JLabel();
        LabelInvoice = new javax.swing.JLabel();
        PrintBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        printTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        InvoiceSearchBar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        InvoiceSearchBar.setForeground(new java.awt.Color(153, 153, 153));
        InvoiceSearchBar.setText("Search");
        InvoiceSearchBar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                InvoiceSearchBarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                InvoiceSearchBarFocusLost(evt);
            }
        });
        InvoiceSearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceSearchBarActionPerformed(evt);
            }
        });
        InvoiceSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InvoiceSearchBarKeyPressed(evt);
            }
        });

        InvoiceLbl.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        InvoiceLbl.setForeground(new java.awt.Color(255, 255, 255));
        InvoiceLbl.setText("Invoice's Section");

        invoiceTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Invoice"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        invoiceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        invoiceScrollPane.setViewportView(invoiceTable);

        signoutBtn.setBackground(new java.awt.Color(102, 51, 153));
        signoutBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        signoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        signoutBtn.setText("Sign Out");
        signoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signoutBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(102, 51, 153));
        backBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        minimizeLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        minimizeLbl.setText("-");
        minimizeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeLblMouseClicked(evt);
            }
        });

        exitLbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        exitLbl.setForeground(new java.awt.Color(204, 0, 0));
        exitLbl.setText("X");
        exitLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLblMouseClicked(evt);
            }
        });

        InvoiceTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        InvoiceTxt.setForeground(new java.awt.Color(153, 153, 153));
        InvoiceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceTxtActionPerformed(evt);
            }
        });

        idTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idTxt.setForeground(new java.awt.Color(153, 153, 153));
        idTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTxtActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(102, 51, 153));
        addBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(102, 51, 153));
        updateBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(102, 51, 153));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        LabelNo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LabelNo.setText("ID");

        LabelInvoice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LabelInvoice.setText("Invoice ");

        PrintBtn.setBackground(new java.awt.Color(102, 51, 153));
        PrintBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        PrintBtn.setForeground(new java.awt.Color(255, 255, 255));
        PrintBtn.setText("Print");
        PrintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintBtnActionPerformed(evt);
            }
        });

        printTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Invoice Description", "Company Name", "Contact", "Insurance Type", "Total Amount", "Amount Paid", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        printTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                printTableFocusGained(evt);
            }
        });
        printTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(printTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(invoiceScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LabelNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LabelInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(InvoiceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(addBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(updateBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(InvoiceLbl)
                                        .addGap(118, 118, 118))
                                    .addComponent(PrintBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(InvoiceSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signoutBtn)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(minimizeLbl)
                        .addGap(18, 18, 18)
                        .addComponent(exitLbl))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(InvoiceSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InvoiceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn)
                            .addComponent(updateBtn)
                            .addComponent(deleteBtn)))
                    .addComponent(invoiceScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(InvoiceLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(PrintBtn)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exitLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(minimizeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(553, 553, 553))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(587, 587, 587)
                        .addComponent(signoutBtn))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void InvoiceSearchBarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InvoiceSearchBarFocusGained

        if (InvoiceSearchBar.getText().equals("Search")) {
            InvoiceSearchBar.setText("");
        }
    }//GEN-LAST:event_InvoiceSearchBarFocusGained

    private void InvoiceSearchBarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InvoiceSearchBarFocusLost

        if (InvoiceSearchBar.getText().equals("")) {
            InvoiceSearchBar.setText("Search");
        }
    }//GEN-LAST:event_InvoiceSearchBarFocusLost

    private void signoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signoutBtnActionPerformed

        dispose();
        new LogIn().setVisible(true);
    }//GEN-LAST:event_signoutBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        dispose();
        new Dashboard().setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void InvoiceSearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceSearchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceSearchBarActionPerformed

    private void minimizeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLblMouseClicked
        setState(ICONIFIED);
    }//GEN-LAST:event_minimizeLblMouseClicked

    private void exitLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLblMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitLblMouseClicked

    private void InvoiceSearchBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InvoiceSearchBarKeyPressed

        DefaultTableModel invoiceTbl = (DefaultTableModel) invoiceTable.getModel();
        search = InvoiceSearchBar.getText();
        tableRow = new TableRowSorter<>(invoiceTbl);
        invoiceTable.setRowSorter(tableRow);
        tableRow.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_InvoiceSearchBarKeyPressed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed

        try {
            sql = "INSERT INTO invoicedetails(id, invoice) VALUES (?,?)";
            conn = DatabaseConnection.getConnection();
            stmt = conn.prepareStatement(sql);
            stmt.setString(1, idTxt.getText());
            stmt.setString(2, InvoiceTxt.getText());
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data succesfully added");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

        updateTableData();
        showTableData();
    }//GEN-LAST:event_addBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        try {
            sql = "UPDATE invoicedetails SET id=?, invoice=? WHERE id=?";
            conn = DatabaseConnection.getConnection();
            stmt = conn.prepareStatement(sql);
            stmt.setString(1, idTxt.getText());
            stmt.setString(2, InvoiceTxt.getText());
            stmt.setString(3, idTxt.getText());
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data updated succesfully");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

        updateTableData();
        showTableData();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void idTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTxtActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        row = invoiceTable.getSelectedRow();
        col = invoiceTable.getModel().getValueAt(row, 0).toString();

        try {
            sql = "DELETE FROM invoicedetails WHERE id =" + col;
            conn = DatabaseConnection.getConnection();
            stmt = conn.prepareStatement(sql);
            stmt.execute();
            JOptionPane.showMessageDialog(null, "Data deleted succesfully");
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

        updateTableData();
        showTableData();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void InvoiceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceTxtActionPerformed

    private void PrintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintBtnActionPerformed
        //JTable source = (JTable) evt.getSource();

        // String Hererow = invoiceTable.getValueAt(invoiceTable.getSelectedRow(), invoiceTable.getSelectedColumn()).toString();
        if (!col.isEmpty()) {
            new Print(String.valueOf(col)).setVisible(true);
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Please select the item first");
        }

    }//GEN-LAST:event_PrintBtnActionPerformed

    private void printTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_printTableFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_printTableFocusGained

    private int colInt;
    private void printTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printTableMouseClicked
        // TODO add your handling code here:
        JTable source = (JTable) evt.getSource();
        row = source.rowAtPoint(evt.getPoint());
        colInt = source.columnAtPoint(evt.getPoint());
        //String s = source.getModel().getValueAt(row, colInt) + "";
        col = invoiceTable.getModel().getValueAt(row, 0).toString();
        //JOptionPane.showMessageDialog(null, col);
    }//GEN-LAST:event_printTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Invoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel InvoiceLbl;
    private javax.swing.JTextField InvoiceSearchBar;
    private javax.swing.JTextField InvoiceTxt;
    private javax.swing.JLabel LabelInvoice;
    private javax.swing.JLabel LabelNo;
    private javax.swing.JButton PrintBtn;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel exitLbl;
    private javax.swing.JTextField idTxt;
    private javax.swing.JScrollPane invoiceScrollPane;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel minimizeLbl;
    private javax.swing.JTable printTable;
    private javax.swing.JButton signoutBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
